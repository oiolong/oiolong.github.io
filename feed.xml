<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>allen&#39;s notes</title>
    <description>about blog Google search results) and in your feed.xml site description. 
</description>
    <link>http://oiolong.github.io//</link>
    <atom:link href="http://oiolong.github.io//feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 25 Nov 2014 17:32:58 +0800</pubDate>
    <lastBuildDate>Tue, 25 Nov 2014 17:32:58 +0800</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>webpack : the next requireJS</title>
        <description>&lt;p&gt;前端技术近几年告别刀耕火种的年代的重要标志就是RequireJS的诞生&lt;/p&gt;

&lt;p&gt;mcfog &lt;a href=&quot;http://segmentfault.com/u/mcfog&quot;&gt;http://segmentfault.com/u/mcfog&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;认为webpack会取代RequireJS的利器webpack&lt;/p&gt;

&lt;p&gt;下列是 mcfog 的见解&lt;/p&gt;

&lt;p&gt;足迹小：在浏览器端代码非常少(minify不gzip 1k左右)，且不占用require define等名字，只占一个用于jsonp的webpackJsonp。
同时支持 amd，cmd，没md等各种情况
支持bower npm等等各种包管理
强大的插件机制，丰富的自带插件，神CommonsChunkPlugin（自动提取多个入口JS的公共部分生成所谓的common.js）
谁用谁知道&lt;/p&gt;

&lt;p&gt;sources&lt;/p&gt;

&lt;p&gt;[webpack] : &lt;a href=&quot;http://webpack.github.io/docs/&quot;&gt;http://webpack.github.io/docs/&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 26 Nov 2014 01:26:57 +0800</pubDate>
        <link>http://oiolong.github.io//webpack/2014/11/26/the-next-requireJs-webpack.html</link>
        <guid isPermaLink="true">http://oiolong.github.io//webpack/2014/11/26/the-next-requireJs-webpack.html</guid>
        
        
        <category>webpack</category>
        
      </item>
    
      <item>
        <title>关于nginx php framework rewrite 的一些纪录</title>
        <description>&lt;p&gt;nginx configs&lt;/p&gt;

&lt;p&gt;before&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;location ~ .*\.php?$
    {
        try_files $uri =404;
        include fcgi.conf;
        fastcgi_pass  127.0.0.1:9000;
        fastcgi_index index.php;
    }


if (!-e $request_filename) {
        rewrite ^/(.+)$ /index.php?$1 last;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;after&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;location / {
     try_files $uri $uri/ /index.php$is_args$args;
}

location ~ .*\.php?$ {
        try_files $uri =404;
        include fcgi.conf;
        fastcgi_pass  127.0.0.1:9000;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;del&gt;fastcgi_index index.php;&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;sources&lt;/p&gt;

&lt;p&gt;[lamp notes] : &lt;a href=&quot;http://huoding.com/2013/10/23/290&quot;&gt;http://huoding.com/2013/10/23/290&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 25 Nov 2014 21:47:57 +0800</pubDate>
        <link>http://oiolong.github.io//nginx/2014/11/25/nginx-php-framework-wreite-setting-tips.html</link>
        <guid isPermaLink="true">http://oiolong.github.io//nginx/2014/11/25/nginx-php-framework-wreite-setting-tips.html</guid>
        
        
        <category>nginx</category>
        
      </item>
    
      <item>
        <title>关于nginx nginx lua 的一些纪录</title>
        <description>&lt;p&gt;souces:&lt;/p&gt;

&lt;p&gt;LuaJIT : &lt;a href=&quot;http://luajit.org/download.html&quot;&gt;http://luajit.org/download.html&lt;/a&gt;
Nginx : &lt;a href=&quot;http://nginx.org/en/download.html&quot;&gt;http://nginx.org/en/download.html&lt;/a&gt;
nginx_devel_kit : &lt;a href=&quot;https://github.com/simpl/ngx_devel_kit/tags&quot;&gt;https://github.com/simpl/ngx_devel_kit/tags&lt;/a&gt;
ngx_lua : &lt;a href=&quot;https://github.com/openresty/lua-nginx-module/tags&quot;&gt;https://github.com/openresty/lua-nginx-module/tags&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;install&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;shell&amp;gt; wget http://luajit.org/download/LuaJIT-&amp;lt;VERSION&amp;gt;.tar.gz
shell&amp;gt; tar zxvf LuaJIT-&amp;lt;VERSION&amp;gt;.tar.gz
shell&amp;gt; cd LuaJIT-&amp;lt;VERSION&amp;gt;
shell&amp;gt; make
shell&amp;gt; make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;因为安装在缺省路径，所以LuaJIT对应的lib，include均在/usr/local目录里。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;shell&amp;gt; export LUAJIT_LIB=/usr/local/lib
shell&amp;gt; export LD_LIBRARY_PATH=/usr/local/luajit/lib/:$LD_LIBRARY_PATH
shell&amp;gt; export LUAJIT_INC=/usr/local/include/luajit-&amp;lt;VERSION&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;顺手加export 到 root 的 .bash_profile 里面&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vim ~/.bash_profile
export LUAJIT_LIB=/usr/local/luajit/lib
export LD_LIBRARY_PATH=/usr/local/luajit/lib/:$LD_LIBRARY_PATH
export LUAJIT_INC=/usr/local/include/luajit-2.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编译Nginx&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;shell&amp;gt; wget http://nginx.org/download/nginx-&amp;lt;VERSION&amp;gt;.tar.gz
shell&amp;gt; tar zxvf nginx-&amp;lt;VERSION&amp;gt;.tar.gz
shell&amp;gt; cd nginx-&amp;lt;VERSION&amp;gt;
shell&amp;gt; ./configure
--add-module=/path/to/ngx_lua \
--add-module=/path/to/ngx_devel_kit
shell&amp;gt; make
shell&amp;gt; make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;试着启动一下Nginx看看，如果你运气不好的话，可能会遇到如下错误：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cannot open shared object file: No such file or directory
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这是神马情况？可以用ldd命令来看看：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;shell&amp;gt; ldd /path/to/nginx
libluajit-&amp;lt;VERSION&amp;gt;.so =&amp;gt; not found
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此类问题通常使用ldconfig命令就能解决：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;shell&amp;gt; echo &quot;/usr/local/lib&quot; &amp;gt; /etc/ld.so.conf.d/usr_local_lib.conf
shell&amp;gt; ldconfig
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;nginx configs&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;location /lua {
set $test &quot;hello, world.&quot;;
content_by_lua &#39;
    ngx.header.content_type = &quot;text/plain&quot;;
    ngx.say(ngx.var.test);
&#39;;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;sources&lt;/p&gt;

&lt;p&gt;[lamp notes] : &lt;a href=&quot;http://huoding.com/2012/08/31/156&quot;&gt;http://huoding.com/2012/08/31/156&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 25 Nov 2014 20:33:57 +0800</pubDate>
        <link>http://oiolong.github.io//nginx/2014/11/25/nginx-nginx-lua-setting-tips.html</link>
        <guid isPermaLink="true">http://oiolong.github.io//nginx/2014/11/25/nginx-nginx-lua-setting-tips.html</guid>
        
        
        <category>nginx</category>
        
      </item>
    
      <item>
        <title>关于nginx geoip 的一些纪录</title>
        <description>&lt;p&gt;install&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;yum install geoip-database libgeoip1

cd /nginx/path/

./configure --with-http_geoip_module
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;nginx configs&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;location = /a.php{
        if ($geoip_country_code = JP) {
            return 504;
            #why the http status code is 504 ? 
            #cause the others code will keep run blow
        }
        include fcgi.conf;
        fastcgi_pass  127.0.0.1:9000;
 }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;sources&lt;/p&gt;

&lt;p&gt;[geoip] : &lt;a href=&quot;http://www.cyberciti.biz/faq/linux-unix-nginx-geoip-module-configuration/&quot;&gt;http://www.cyberciti.biz/faq/linux-unix-nginx-geoip-module-configuration/&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 25 Nov 2014 20:33:57 +0800</pubDate>
        <link>http://oiolong.github.io//nginx/2014/11/25/nginx-geoip-setting-tips.html</link>
        <guid isPermaLink="true">http://oiolong.github.io//nginx/2014/11/25/nginx-geoip-setting-tips.html</guid>
        
        
        <category>nginx</category>
        
      </item>
    
      <item>
        <title>Welcome to Atom&#39;s notes!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve --watch&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check out the [Jekyll docs][jekyll] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyll’s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll’s dedicated Help repository][jekyll-help].&lt;/p&gt;

</description>
        <pubDate>Mon, 24 Nov 2014 02:49:57 +0800</pubDate>
        <link>http://oiolong.github.io//jekyll/update/2014/11/24/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://oiolong.github.io//jekyll/update/2014/11/24/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
