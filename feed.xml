<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>allen&#39;s notes</title>
    <description>about blog Google search results) and in your feed.xml site description. 
</description>
    <link>http://oiolong.github.io//</link>
    <atom:link href="http://oiolong.github.io//feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 27 Nov 2014 14:05:36 +0800</pubDate>
    <lastBuildDate>Thu, 27 Nov 2014 14:05:36 +0800</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>关于centos 快速搬移用户的一些纪录</title>
        <description>&lt;p&gt;要从A服务器搬使用者到B服务器的一些方法&lt;/p&gt;

&lt;p&gt;机器作搬移，想要偷懒用比较快速的方法做搬移&lt;/p&gt;

&lt;p&gt;于是用上了rsync&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /home
rsync -av --delete ./* root@B/home/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;搬完过去后再把&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/etc/passwd
/etc/group
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这两个档案把要的user 复制粘贴过去就好了&lt;/p&gt;

&lt;p&gt;切换过去简单测试了一下，就以为结束了&lt;/p&gt;

&lt;p&gt;后来有公司的同学反映ssh 不上去&lt;/p&gt;

&lt;p&gt;看了一下log &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# tail -f /var/log/secure
Nov 27 05:36:51 B sshd[8512]: fatal: Access denied for user jason by PAM account configuration
Nov 27 05:36:53 B sshd[8514]: fatal: Access denied for user jason by PAM account configuration
Nov 27 05:36:56 B sshd[8516]: fatal: Access denied for user jason by PAM account configuration
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;后来发现是 /etc/shadow 这个档案出了问题&lt;/p&gt;

&lt;p&gt;再把相对应的user 拷过来就可以运行了&lt;/p&gt;

&lt;p&gt;后来去cyberciti 查了一下，才了解到这个档案的用处。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Q. Can you explain /etc/shadow file used under Linux or UNIX?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;A. /etc/shadow file stores actual password in encrypted format&lt;/em&gt;&lt;/strong&gt;
for user’s account with additional properties related to user password i.e. it stores secure user account information. All fields are separated by a colon (:) symbol. It contains one entry per line for each user listed in /etc/passwd file Generally, shadow file entry looks as follows (click to enlarge image):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.cyberciti.biz/faqs/uploaded_images/shadow-file-795497.png&quot; alt=&quot;说明&quot; /&gt;&lt;/p&gt;

&lt;p&gt;1.&lt;strong&gt;User name&lt;/strong&gt; : It is your login name&lt;/p&gt;

&lt;p&gt;2.&lt;strong&gt;Password&lt;/strong&gt; : It your encrypted password. The password should be minimum 6-8 characters long including special characters/digits&lt;/p&gt;

&lt;p&gt;3.&lt;strong&gt;Last password change (lastchanged)&lt;/strong&gt; : Days since Jan 1, 1970 that password was last changed&lt;/p&gt;

&lt;p&gt;4.&lt;strong&gt;Minimum&lt;/strong&gt; : The minimum number of days required between password changes i.e. the number of days left before the user is allowed to change his/her password&lt;/p&gt;

&lt;p&gt;5.&lt;strong&gt;Maximum&lt;/strong&gt; : The maximum number of days the password is valid (after that user is forced to change his/her password)
Warn : The number of days before password is to expire that user is warned that his/her password must be changed
Inactive : The number of days after password expires that account is disabled&lt;/p&gt;

&lt;p&gt;6.&lt;strong&gt;Expire&lt;/strong&gt; : days since Jan 1, 1970 that account is disabled i.e. an absolute date specifying when the login may no longer be used&lt;/p&gt;

&lt;p&gt;[serverfault.com] : &lt;a href=&quot;http://serverfault.com/questions/540004/ssh-access-denied-by-pam-account-configuration-for-one-non-root-user-but-not&quot;&gt;http://serverfault.com/questions/540004/ssh-access-denied-by-pam-account-configuration-for-one-non-root-user-but-not&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[cyberciti.biz] : &lt;a href=&quot;http://www.cyberciti.biz/faq/understanding-etcshadow-file/&quot;&gt;http://www.cyberciti.biz/faq/understanding-etcshadow-file/&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 27 Nov 2014 21:52:57 +0800</pubDate>
        <link>http://oiolong.github.io//linux/2014/11/27/move-users-to-another-server-tips.html</link>
        <guid isPermaLink="true">http://oiolong.github.io//linux/2014/11/27/move-users-to-another-server-tips.html</guid>
        
        
        <category>linux</category>
        
      </item>
    
      <item>
        <title>nginx 安装geoip 和php 设置</title>
        <description>&lt;p&gt;&lt;strong&gt;Compile nginx With GeoIP Module&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget http://nginx.org/download/nginx-0.8.52.tar.gz
 tar -zxvf nginx-0.8.52.tar.gz
 cd nginx-0.8.52
 yum install gcc pcre-devel.x86_64 openssl-devel.x86_64
 ./configure --with-http_geoip_module
 make
 make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;nginx Configuration&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Edit nginx.conf, enter:&lt;/p&gt;

&lt;p&gt;Locate http section and update it as follows for geoip country lookup:&lt;/p&gt;

  	geoip_country /usr/local/share/GeoIP/GeoIP.dat;

&lt;pre&gt;&lt;code&gt;fastcgi_param GEOIP_COUNTRY_CODE $geoip_country_code;
fastcgi_param GEOIP_COUNTRY_CODE3 $geoip_country_code3;
fastcgi_param GEOIP_COUNTRY_NAME $geoip_country_name;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Save and close the file. If you want city level geo targeting set it as follows:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PHP Test Script&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Create a php test script as follows geoip.php&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;title&amp;gt;What is my IP address - determine or retrieve my IP address&amp;lt;/title&amp;gt;
 &amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
 &amp;lt;?php
     if (getenv(HTTP_X_FORWARDED_FOR)) {
        $pipaddress = getenv(HTTP_X_FORWARDED_FOR);
        $ipaddress = getenv(REMOTE_ADDR);
        echo &quot;Your Proxy IP address is : &quot;.$pipaddress. &quot; (via $ipaddress) &quot; ;
    } else {
        $ipaddress = getenv(REMOTE_ADDR);
        echo &quot;Your IP address is : $ipaddress&quot;;
    }
    $country = getenv(GEOIP_COUNTRY_NAME);
    $country_code = getenv(GEOIP_COUNTRY_CODE);
    echo &quot;&amp;lt;br/&amp;gt;Your country : $country ( $country_code ) &quot;;
?&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;sources&lt;/p&gt;

&lt;p&gt;[cyberciti] : &lt;a href=&quot;http://www.cyberciti.biz/faq/linux-unix-nginx-geoip-module-configuration/&quot;&gt;http://www.cyberciti.biz/faq/linux-unix-nginx-geoip-module-configuration/&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 26 Nov 2014 01:56:57 +0800</pubDate>
        <link>http://oiolong.github.io//nginx/2014/11/26/nginx-Install-GeoIP-Module-For-Country-:-City-Level-Geo-Targeting.html</link>
        <guid isPermaLink="true">http://oiolong.github.io//nginx/2014/11/26/nginx-Install-GeoIP-Module-For-Country-:-City-Level-Geo-Targeting.html</guid>
        
        
        <category>nginx</category>
        
      </item>
    
      <item>
        <title>react edge backbone requirejs (未)</title>
        <description>&lt;p&gt;&lt;strong&gt;React + Backbone + RequireJS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Last time we looked at how to use React to render views in combination with the Backbone router. Today we’ll see how to build the latest React version and load both React and Backbone using RequireJS.&lt;/p&gt;

&lt;p&gt;RequireJS is a file/module loader library which is optimised for browser use. It’s often used in the structuring of large JavaScript codebases, to load modules on demand (asynchronously).&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Please post any errors you find, or questions you have as comments on this article.
Thanks to Wayne Berry, Ricardo Mendes and Thomas Coopman for helping to improve this!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Building Edge React&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The version you first see, on the React homepage (&lt;a href=&quot;http://facebook.github.io/react/index.html&quot;&gt;http://facebook.github.io/react/index.html&lt;/a&gt;) is not always the most up-to date version you could use. To get the latest version, we need to follow a few steps:&lt;/p&gt;

&lt;p&gt;Clone the React GitHub repo.
Install the required NPM modules.
Build the distribution files.
To clone the React GitHub repo, use the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/facebook/react.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next, navigate to the new clone directory and install the required NPM modules:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, build the distribution files, using Grunt:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;grunt
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;The first step assumes you have Git command-line utility installed (http://git-scm.com). The second, that you have NPM command-line utility installed (https://npmjs.org). The third, that you have Grunt command-line utility installed (http://gruntjs.com). I won’t walk you through installing them.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After Grunt has finished compiling the React source-code, you will see a build folder, filled with compiled JavaScript files. The ones you are probably looking for are react[-with-addons].js and JSXTransformer.js. There are also NPM-friendly modules, if you’re looking to run React in Node.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;It’s not always the best idea to use an edge version of React. The version I just compiled is clearly marked as an alpha version, and these are not always production ready.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Using RequireJS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;RequireJS is just another JavaScript library. Download the source at: &lt;a href=&quot;http://requirejs.org/docs/download.html&quot;&gt;http://requirejs.org/docs/download.html&lt;/a&gt;. You’ll then need to include it in your HTML page:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script data-main=&quot;main.js&quot; src=&quot;require.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you’re structuring your JavaScript codebase the usual way, this will be the only script file you need to include directly. Everything else should be loaded asynchronously, and the origin of this loading will be the contents of main.js.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Every application needs an entry-point. The first bit of JavaScript to load all other JavaScript. That happens in main.js. You can call it whatever you like, but you should include it in the data-main attribute or RequireJS won’t know how to bootstrap your application code.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You can learn more about RequireJS at: &lt;a href=&quot;http://requirejs.org&quot;&gt;http://requirejs.org&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Holding Backbone’s Hand&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;RequireJS support is virtually non-existent in Backbone. I’m not sure why this should be, as it’s trivial to support RequireJS without sweeping changes to Backbone’s codebase, but there you have it.&lt;/p&gt;

&lt;p&gt;As previously seen, Backbone requires jQuery (http://jquery.com/
download) and Underscore (http://underscorejs.org), so go ahead and download these. Don’t link them yet, as we will do this in main.js.&lt;/p&gt;

&lt;p&gt;These libraries typically register themselves in the global namespace. That’s on the opposite end of the spectrum to RequireJS. Unfortunately, Backbone doesn’t care, so we need to continue to include them in the global namespace for Backbone to work.&lt;/p&gt;

&lt;p&gt;This is done, in RequireJS, with what’s called a shim configuration. My main.js file looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;require.config({
  &quot;baseUrl&quot; : &quot;/js&quot;,
  &quot;paths&quot;   : {
    &quot;jquery&quot;     : &quot;path/to/jquery&quot;,
    &quot;underscore&quot; : &quot;paht/to/underscore&quot;,
    &quot;backbone&quot;   : &quot;path/to/backbone&quot;,
    &quot;react&quot;      : &quot;path/to/react&quot;
  },
  &quot;shim&quot; : {
    &quot;backbone&quot; : {
      &quot;deps&quot; : [
        &quot;jquery&quot;,
        &quot;underscore&quot;
      ],
      &quot;exports&quot; : &quot;Backbone&quot;
    },
    &quot;jquery&quot; : {
      &quot;exports&quot; : &quot;$&quot;
    },
    &quot;underscore&quot; : {
      &quot;exports&quot; : &quot;_&quot;
    }
  }
});
 
require([&quot;backbone&quot;, &quot;router&quot;], function(Backbone, Router) {
  new Router();
  Backbone.history.start();
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;My router.js file looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;define([&quot;backbone&quot;], function(Backbone) {
  return Backbone.Router.extend({
    routes : {
      &quot;&quot; : &quot;index&quot;
    },
    index : function() {
      console.log(&quot;hello world&quot;);
    }
  });
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We’re doing a number of important things in the RequireJS configuration:&lt;/p&gt;

&lt;p&gt;set the JavaScript root directory so RequireJS knows where to begin looking for module files.
We define a number of module aliases. These are shortcut alternatives to defining the entire file path when needing to include a module like jquery.
We create the shim configuration for Backbone, specifying dependencies, and what each of them export for Backbone’s use.
I mentioned that the bootstrapping (entry-point) of the application code happens in main.js. That’s what the bottom bit is about — we require the router, instantiate it and start Backbone’s history. We could do this in an external module file, or whatever. It’s not important.&lt;/p&gt;

&lt;p&gt;sources&lt;/p&gt;

&lt;p&gt;[react-tutorials] : &lt;a href=&quot;https://medium.com/react-tutorials/react-edge-backbone-requirejs-15602e6f88fa&quot;&gt;https://medium.com/react-tutorials/react-edge-backbone-requirejs-15602e6f88fa&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 26 Nov 2014 01:54:57 +0800</pubDate>
        <link>http://oiolong.github.io//react/2014/11/26/react-edge-backbone-requirejs.html</link>
        <guid isPermaLink="true">http://oiolong.github.io//react/2014/11/26/react-edge-backbone-requirejs.html</guid>
        
        
        <category>react</category>
        
      </item>
    
      <item>
        <title>webpack : the next requireJS</title>
        <description>&lt;p&gt;前端技术近几年告别刀耕火种的年代的重要标志就是RequireJS的诞生&lt;/p&gt;

&lt;p&gt;mcfog &lt;a href=&quot;http://segmentfault.com/u/mcfog&quot;&gt;http://segmentfault.com/u/mcfog&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;认为webpack会取代RequireJS的利器webpack&lt;/p&gt;

&lt;p&gt;下列是 mcfog 的见解&lt;/p&gt;

&lt;p&gt;足迹小：在浏览器端代码非常少(minify不gzip 1k左右)，且不占用require define等名字，只占一个用于jsonp的webpackJsonp。
同时支持 amd，cmd，没md等各种情况
支持bower npm等等各种包管理
强大的插件机制，丰富的自带插件，神CommonsChunkPlugin（自动提取多个入口JS的公共部分生成所谓的common.js）
谁用谁知道&lt;/p&gt;

&lt;p&gt;sources&lt;/p&gt;

&lt;p&gt;[webpack] : &lt;a href=&quot;http://webpack.github.io/docs/&quot;&gt;http://webpack.github.io/docs/&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 26 Nov 2014 01:26:57 +0800</pubDate>
        <link>http://oiolong.github.io//webpack/2014/11/26/the-next-requireJs-webpack.html</link>
        <guid isPermaLink="true">http://oiolong.github.io//webpack/2014/11/26/the-next-requireJs-webpack.html</guid>
        
        
        <category>webpack</category>
        
      </item>
    
      <item>
        <title>关于nginx php framework rewrite 的一些纪录</title>
        <description>&lt;p&gt;nginx configs&lt;/p&gt;

&lt;p&gt;before&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;location ~ .*\.php?$
    {
        try_files $uri =404;
        include fcgi.conf;
        fastcgi_pass  127.0.0.1:9000;
        fastcgi_index index.php;
    }


if (!-e $request_filename) {
        rewrite ^/(.+)$ /index.php?$1 last;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;after&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;location / {
     try_files $uri $uri/ /index.php$is_args$args;
}

location ~ .*\.php?$ {
        try_files $uri =404;
        include fcgi.conf;
        fastcgi_pass  127.0.0.1:9000;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;del&gt;fastcgi_index index.php;&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;sources&lt;/p&gt;

&lt;p&gt;[lamp notes] : &lt;a href=&quot;http://huoding.com/2013/10/23/290&quot;&gt;http://huoding.com/2013/10/23/290&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 25 Nov 2014 21:47:57 +0800</pubDate>
        <link>http://oiolong.github.io//nginx/2014/11/25/nginx-php-framework-wreite-setting-tips.html</link>
        <guid isPermaLink="true">http://oiolong.github.io//nginx/2014/11/25/nginx-php-framework-wreite-setting-tips.html</guid>
        
        
        <category>nginx</category>
        
      </item>
    
      <item>
        <title>关于nginx nginx lua 的一些纪录</title>
        <description>&lt;p&gt;souces:&lt;/p&gt;

&lt;p&gt;LuaJIT : &lt;a href=&quot;http://luajit.org/download.html&quot;&gt;http://luajit.org/download.html&lt;/a&gt;
Nginx : &lt;a href=&quot;http://nginx.org/en/download.html&quot;&gt;http://nginx.org/en/download.html&lt;/a&gt;
nginx_devel_kit : &lt;a href=&quot;https://github.com/simpl/ngx_devel_kit/tags&quot;&gt;https://github.com/simpl/ngx_devel_kit/tags&lt;/a&gt;
ngx_lua : &lt;a href=&quot;https://github.com/openresty/lua-nginx-module/tags&quot;&gt;https://github.com/openresty/lua-nginx-module/tags&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;install&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;shell&amp;gt; wget http://luajit.org/download/LuaJIT-&amp;lt;VERSION&amp;gt;.tar.gz
shell&amp;gt; tar zxvf LuaJIT-&amp;lt;VERSION&amp;gt;.tar.gz
shell&amp;gt; cd LuaJIT-&amp;lt;VERSION&amp;gt;
shell&amp;gt; make
shell&amp;gt; make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;因为安装在缺省路径，所以LuaJIT对应的lib，include均在/usr/local目录里。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;shell&amp;gt; export LUAJIT_LIB=/usr/local/lib
shell&amp;gt; export LD_LIBRARY_PATH=/usr/local/luajit/lib/:$LD_LIBRARY_PATH
shell&amp;gt; export LUAJIT_INC=/usr/local/include/luajit-&amp;lt;VERSION&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;顺手加export 到 root 的 .bash_profile 里面&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vim ~/.bash_profile
export LUAJIT_LIB=/usr/local/luajit/lib
export LD_LIBRARY_PATH=/usr/local/luajit/lib/:$LD_LIBRARY_PATH
export LUAJIT_INC=/usr/local/include/luajit-2.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编译Nginx&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;shell&amp;gt; wget http://nginx.org/download/nginx-&amp;lt;VERSION&amp;gt;.tar.gz
shell&amp;gt; tar zxvf nginx-&amp;lt;VERSION&amp;gt;.tar.gz
shell&amp;gt; cd nginx-&amp;lt;VERSION&amp;gt;
shell&amp;gt; ./configure
--add-module=/path/to/ngx_lua \
--add-module=/path/to/ngx_devel_kit
shell&amp;gt; make
shell&amp;gt; make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;试着启动一下Nginx看看，如果你运气不好的话，可能会遇到如下错误：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cannot open shared object file: No such file or directory
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这是神马情况？可以用ldd命令来看看：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;shell&amp;gt; ldd /path/to/nginx
libluajit-&amp;lt;VERSION&amp;gt;.so =&amp;gt; not found
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此类问题通常使用ldconfig命令就能解决：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;shell&amp;gt; echo &quot;/usr/local/lib&quot; &amp;gt; /etc/ld.so.conf.d/usr_local_lib.conf
shell&amp;gt; ldconfig
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;nginx configs&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;location /lua {
set $test &quot;hello, world.&quot;;
content_by_lua &#39;
    ngx.header.content_type = &quot;text/plain&quot;;
    ngx.say(ngx.var.test);
&#39;;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;sources&lt;/p&gt;

&lt;p&gt;[lamp notes] : &lt;a href=&quot;http://huoding.com/2012/08/31/156&quot;&gt;http://huoding.com/2012/08/31/156&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 25 Nov 2014 20:33:57 +0800</pubDate>
        <link>http://oiolong.github.io//nginx/2014/11/25/nginx-nginx-lua-setting-tips.html</link>
        <guid isPermaLink="true">http://oiolong.github.io//nginx/2014/11/25/nginx-nginx-lua-setting-tips.html</guid>
        
        
        <category>nginx</category>
        
      </item>
    
      <item>
        <title>关于nginx geoip 的一些纪录</title>
        <description>&lt;p&gt;install&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;yum install geoip-database libgeoip1

cd /nginx/path/

./configure --with-http_geoip_module
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;nginx configs&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;location = /a.php{
        if ($geoip_country_code = JP) {
            return 504;
            #why the http status code is 504 ? 
            #cause the others code will keep run blow
        }
        include fcgi.conf;
        fastcgi_pass  127.0.0.1:9000;
 }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;sources&lt;/p&gt;

&lt;p&gt;[geoip] : &lt;a href=&quot;http://www.cyberciti.biz/faq/linux-unix-nginx-geoip-module-configuration/&quot;&gt;http://www.cyberciti.biz/faq/linux-unix-nginx-geoip-module-configuration/&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 25 Nov 2014 20:33:57 +0800</pubDate>
        <link>http://oiolong.github.io//nginx/2014/11/25/nginx-geoip-setting-tips.html</link>
        <guid isPermaLink="true">http://oiolong.github.io//nginx/2014/11/25/nginx-geoip-setting-tips.html</guid>
        
        
        <category>nginx</category>
        
      </item>
    
      <item>
        <title>Welcome to Atom&#39;s notes!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve --watch&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check out the [Jekyll docs][jekyll] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyll’s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll’s dedicated Help repository][jekyll-help].&lt;/p&gt;

</description>
        <pubDate>Mon, 24 Nov 2014 02:49:57 +0800</pubDate>
        <link>http://oiolong.github.io//jekyll/update/2014/11/24/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://oiolong.github.io//jekyll/update/2014/11/24/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
